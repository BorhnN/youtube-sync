#!/bin/bash

function sync {
	if [ -n "$2" ]; then
		URL="$2"
		mkdir -p "SYNC/$1/META"
		echo -n "$URL" > "SYNC/$1/META/source"
	elif [ -f "SYNC/$1/META/source" ]; then
		read -r URL < "SYNC/$1/META/source"
	else
		>&2 echo "Fatal error: Missing URL in profile '$1'."
		exit 1
	fi

	youtube-dl -i -f bestvideo+bestaudio --merge-output-format mkv -o "SYNC/$1/ID/%(id)s.mkv" "$URL"
}

#

function showHelp {
	if [ "$1" = "help" ]; then
		echo -e "Command: help - usage: $0 help <command>\n"
		echo "Shows help for a given command or a list of available commands if no command is specified."
	elif [ "$1" = "setup" ]; then
		echo -e "Command: setup - usage: $0 setup <profilename> <URL>\n"
		echo "Sets up a new profile with the name <profilename> which will be saved to SYNC/<profilename> and will be linked to <URL>. After setting up a profile, you will be able to sync it using the update command."
	elif [ "$1" = "list" ]; then
		echo -e "Command: list - usage: $0 list\n"
		echo "List all existing profiles."
	elif [ "$1" = "update" ]; then
		echo -e "Command: help - usage: $0 update <profilename>\n"
		echo "Updates a profile by fetching all new content along with its metadata."
	else
		echo -e "Available commands:\n"
		echo "$0 help   - Shows this help."
		echo "$0 setup  - Setup content syncing profile."
		echo "$0 list   - List content syncing profiles."
		echo "$0 update - Update content."
		echo -e "\nRun $0 help <command> to show more details and usage help."
	fi
}

if [ -z "$1" ]; then
	>&2 echo "Missing command."
	showHelp
	exit 1
elif [ "$1" = "help" ]; then
	showHelp "${@:2}"
elif [ "$1" = "setup" ]; then
	if [ -z "$2" ]; then
		>&2 echo "Missing sync directory name."
		exit 1
	elif [ -z "$3" ]; then
		>&2 echo "Missing URL."
		exit 1
	elif [[ "$3" =~ ^https?:// ]]; then
		sync "${@:2}"
	else
		>&2 echo "Invalid URL."
		exit 1
	fi
fi
